(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{464:function(e,t,s){e.exports=s.p+"assets/img/maven10.6f881b04.png"},522:function(e,t,s){"use strict";s.r(t);var v=s(14),l=Object(v.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),v("p",[e._v("Maven有三套相互独立的生命周期，是“三套”，而且“相互独立”")]),e._v(" "),v("h3",{attrs:{id:"clean-lifecycle"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#clean-lifecycle"}},[e._v("#")]),e._v(" Clean Lifecycle")]),e._v(" "),v("p",[e._v("在进行真正的构建之前进行一些清理工作, Clean生命周期一共包含了三个阶段")]),e._v(" "),v("ul",[v("li",[e._v("pre-clean 执行一些需要在clean之前完成的工作")]),e._v(" "),v("li",[e._v("clean 移除所有上一次构建生成的文件")]),e._v(" "),v("li",[e._v("post-clean 执行一些需要在clean之后立刻完成的工作")])]),e._v(" "),v("h3",{attrs:{id:"default-lifecycle"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#default-lifecycle"}},[e._v("#")]),e._v(" Default Lifecycle")]),e._v(" "),v("p",[e._v("构建的核心部分，编译，测试，打包，部署等等")]),e._v(" "),v("ul",[v("li",[e._v("validate")]),e._v(" "),v("li",[e._v("generate-sources")]),e._v(" "),v("li",[e._v("process-sources")]),e._v(" "),v("li",[e._v("generate-resources")]),e._v(" "),v("li",[e._v("process-resources 复制并处理资源文件，至目标目录，准备打包")]),e._v(" "),v("li",[e._v("compile 编译项目的源代码")]),e._v(" "),v("li",[e._v("process-classes")]),e._v(" "),v("li",[e._v("generate-test-sources")]),e._v(" "),v("li",[e._v("process-test-sources")]),e._v(" "),v("li",[e._v("generate-test-resources")]),e._v(" "),v("li",[e._v("process-test-resources 复制并处理资源文件，至目标测试目录")]),e._v(" "),v("li",[e._v("test-compile 编译测试源代码")]),e._v(" "),v("li",[e._v("process-test-classes")]),e._v(" "),v("li",[e._v("test 使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署")]),e._v(" "),v("li",[e._v("prepare-package")]),e._v(" "),v("li",[e._v("package 接受编译好的代码，打包成可发布的格式，如 JAR")]),e._v(" "),v("li",[e._v("pre-integration-test")]),e._v(" "),v("li",[e._v("integration-test")]),e._v(" "),v("li",[e._v("post-integration-test")]),e._v(" "),v("li",[e._v("verify")]),e._v(" "),v("li",[e._v("install 将包安装至本地仓库，以让其它项目依赖。")]),e._v(" "),v("li",[e._v("deploy 将最终的包复制到远程的仓库，以让其它开发人员与项目共享")])]),e._v(" "),v("p",[v("img",{attrs:{src:s(464),alt:""}})]),e._v(" "),v("p",[e._v("通过执行mvn install 命令,其中已经执行了compile和test")]),e._v(" "),v("p",[e._v("总结： 不论你要执行生命周期的哪一个阶段，maven都是从这个生命周期的开始执行")]),e._v(" "),v("p",[e._v("插件： 每个阶段都有插件（plugin），看上面标红的。插件的职责就是执行它对应的命令。")]),e._v(" "),v("h3",{attrs:{id:"site-lifecycle"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#site-lifecycle"}},[e._v("#")]),e._v(" Site Lifecycle")]),e._v(" "),v("p",[e._v("生成项目报告，站点，发布站点。")]),e._v(" "),v("ul",[v("li",[e._v("pre-site 执行一些需要在生成站点文档之前完成的工作")]),e._v(" "),v("li",[e._v("site 生成项目的站点文档")]),e._v(" "),v("li",[e._v("post-site 执行一些需要在生成站点文档之后完成的工作，并且为部署做准备")]),e._v(" "),v("li",[e._v("site-deploy 将生成的站点文档部署到特定的服务器上")])])])}),[],!1,null,null,null);t.default=l.exports}}]);