(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{487:function(v,_,e){v.exports=e.p+"assets/img/spring06.185d35f9.png"},551:function(v,_,e){"use strict";e.r(_);var t=e(16),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"aop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[v._v("#")]),v._v(" AOP")]),v._v(" "),t("p",[v._v("AOP意为: 面向"),t("code",[v._v("切面")]),v._v("编程")]),v._v(" "),t("p",[v._v("通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术")]),v._v(" "),t("p",[v._v("AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个"),t("code",[v._v("重要内容")])]),v._v(" "),t("p",[v._v("是"),t("code",[v._v("函数式编程")]),v._v("的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行"),t("code",[v._v("隔离")]),v._v("，从而使得业务逻辑部分之间的"),t("code",[v._v("耦合度降低")]),v._v("，提高程序的"),t("code",[v._v("可重用性")]),v._v("，同时提高了"),t("code",[v._v("开发的效率")])]),v._v(" "),t("p",[t("img",{attrs:{src:e(487),alt:""}})]),v._v(" "),t("h2",{attrs:{id:"aop在spring中的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aop在spring中的作用"}},[v._v("#")]),v._v(" AOP在Spring中的作用")]),v._v(" "),t("p",[v._v("提供声明式事务，允许用户自定义切面")]),v._v(" "),t("ul",[t("li",[v._v("横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点。如日志，安全，缓存，事务等等....")]),v._v(" "),t("li",[v._v("切面（ASPECT）：横切关注点被模块化的特殊对象。即，它是一个类。")]),v._v(" "),t("li",[v._v("通知（Advice）：切面必须要完成的工作。即，它是类中的一个方法。")]),v._v(" "),t("li",[v._v("目标（Target）：被通知对象。")]),v._v(" "),t("li",[v._v("代理（Proxy）：向目标对象应用通知之后创建的对象。")]),v._v(" "),t("li",[v._v("切入点（PointCut）：切面通知执行的“地点“的定义")]),v._v(" "),t("li",[v._v("连接点（JointPoint）：与切入点匹配的执行点")])]),v._v(" "),t("h2",{attrs:{id:"advice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#advice"}},[v._v("#")]),v._v(" Advice")]),v._v(" "),t("p",[v._v("SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("Before Advice：在连接点（Join point）之前执行")])]),v._v(" "),t("li",[t("p",[v._v("After Advice：当连接点退出的时候执行")])]),v._v(" "),t("li",[t("p",[v._v("Around Advice：环绕一个连接点的增强，这是最强大的一种增强类型。可以在方法调用前、后完成自定义的行为、是否继续执行连接点、是否进行原逻辑、是否抛出异常来结束执行")])]),v._v(" "),t("li",[t("p",[v._v("AfterReturning Advice：在连接点正常完成后执行的增强，如果连接点抛出异常，则不执行")])]),v._v(" "),t("li",[t("p",[v._v("AfterThrowing Advice：在方法抛出异常退出时执行的增强")])])]),v._v(" "),t("blockquote",[t("p",[v._v("Spring的Aop就是将公共的业务 (日志 , 安全等) 和领域业务结合起来 , 当执行领域业务时 , 将会把公共业务加进来 . 实现公共业务的"),t("code",[v._v("重复")]),v._v("利用 . 领域业务更"),t("code",[v._v("纯粹")]),v._v(" , 程序猿专注"),t("code",[v._v("领域业务")]),v._v(" , 其本质还是"),t("code",[v._v("动态代理")])])])])}),[],!1,null,null,null);_.default=i.exports}}]);