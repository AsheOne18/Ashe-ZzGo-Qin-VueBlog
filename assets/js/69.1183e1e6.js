(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{566:function(t,a,s){"use strict";s.r(a);var e=s(16),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"restful简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful简介"}},[t._v("#")]),t._v(" RESTful简介")]),t._v(" "),s("p",[t._v("REST："),s("strong",[t._v("Re")]),t._v("presentational "),s("strong",[t._v("S")]),t._v("tate "),s("strong",[t._v("T")]),t._v("ransfer，表现层资源状态转移。")]),t._v(" "),s("h3",{attrs:{id:"资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源"}},[t._v("#")]),t._v(" 资源")]),t._v(" "),s("p",[t._v("资源是一种看待服务器的方式，即，将服务器看作是由很多离散的资源组成。")]),t._v(" "),s("p",[t._v("每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅能代表服务器文件系统中的一个文件、数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端应用开发者能够理解。")]),t._v(" "),s("p",[t._v("与面向对象设计类似，资源是以名词为核心来组织的，首先关注的是名词。一个资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。")]),t._v(" "),s("p",[t._v("对某个资源感兴趣的客户端应用，可以通过资源的URI与其进行交互。")]),t._v(" "),s("h3",{attrs:{id:"资源的表述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源的表述"}},[t._v("#")]),t._v(" 资源的表述")]),t._v(" "),s("p",[t._v("资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交换）。资源的表述可以有多种格式，例如HTML/XML/JSON/纯文本/图片/视频/音频等等。资源的表述格式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。")]),t._v(" "),s("h3",{attrs:{id:"状态转移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态转移"}},[t._v("#")]),t._v(" 状态转移")]),t._v(" "),s("p",[t._v("状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。")]),t._v(" "),s("h2",{attrs:{id:"restful的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful的实现"}},[t._v("#")]),t._v(" RESTful的实现")]),t._v(" "),s("p",[t._v("具体说，就是 HTTP 协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。")]),t._v(" "),s("p",[t._v("它们分别对应四种基本操作：GET 用来获取资源，POST 用来新建资源，PUT 用来更新资源，DELETE 用来删除资源。")]),t._v(" "),s("p",[t._v("REST 风格提倡 URL 地址使用统一的风格设计，从前到后各个单词使用斜杠分开，不使用问号键值对方式携带请求参数，而是将要发送给服务器的数据作为 URL 地址的一部分，以保证整体风格的一致性。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作")]),t._v(" "),s("th",[t._v("传统方式")]),t._v(" "),s("th",[t._v("REST风格")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("查询操作")]),t._v(" "),s("td",[t._v("getUserById?id=1")]),t._v(" "),s("td",[t._v("user/1--\x3eget请求方式")])]),t._v(" "),s("tr",[s("td",[t._v("保存操作")]),t._v(" "),s("td",[t._v("saveUser")]),t._v(" "),s("td",[t._v("user--\x3epost请求方式")])]),t._v(" "),s("tr",[s("td",[t._v("删除操作")]),t._v(" "),s("td",[t._v("deleteUser?id=1")]),t._v(" "),s("td",[t._v("user/1--\x3edelete请求方式")])]),t._v(" "),s("tr",[s("td",[t._v("更新操作")]),t._v(" "),s("td",[t._v("updateUser")]),t._v(" "),s("td",[t._v("user--\x3eput请求方式")])])])]),t._v(" "),s("h2",{attrs:{id:"hiddenhttpmethodfilter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hiddenhttpmethodfilter"}},[t._v("#")]),t._v(" HiddenHttpMethodFilter")]),t._v(" "),s("p",[t._v("由于浏览器只支持发送get和post方式的请求，那么该如何发送put和delete请求呢？")]),t._v(" "),s("p",[t._v("SpringMVC 提供了 "),s("strong",[t._v("HiddenHttpMethodFilter")]),t._v(" 帮助我们"),s("strong",[t._v("将 POST 请求转换为 DELETE 或 PUT 请求")])]),t._v(" "),s("p",[s("strong",[t._v("HiddenHttpMethodFilter")]),t._v(" 处理put和delete请求的条件：")]),t._v(" "),s("p",[t._v("a>当前请求的请求方式必须为post")]),t._v(" "),s("p",[t._v("b>当前请求必须传输请求参数_method")]),t._v(" "),s("p",[t._v("满足以上条件，"),s("strong",[t._v("HiddenHttpMethodFilter")]),t._v(" 过滤器就会将当前请求的请求方式转换为请求参数_method的值，因此请求参数_method的值才是最终的请求方式")]),t._v(" "),s("p",[t._v("在web.xml中注册"),s("strong",[t._v("HiddenHttpMethodFilter")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HiddenHttpMethodFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.filter.HiddenHttpMethodFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HiddenHttpMethodFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("blockquote",[s("p",[t._v("注：")]),t._v(" "),s("p",[t._v("目前为止，SpringMVC中提供了两个过滤器：CharacterEncodingFilter和HiddenHttpMethodFilter")]),t._v(" "),s("p",[t._v("在web.xml中注册时，必须先注册CharacterEncodingFilter，再注册HiddenHttpMethodFilter")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在 CharacterEncodingFilter 中通过 request.setCharacterEncoding(encoding) 方法设置字符集的")])]),t._v(" "),s("li",[s("p",[t._v("request.setCharacterEncoding(encoding) 方法要求前面不能有任何获取请求参数的操作")])]),t._v(" "),s("li",[s("p",[t._v("而 HiddenHttpMethodFilter 恰恰有一个获取请求方式的操作：")])]),t._v(" "),s("li",[s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" paramValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("methodParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);