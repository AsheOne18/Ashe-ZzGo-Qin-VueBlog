(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{454:function(v,_,r){v.exports=r.p+"assets/img/spring01.43e9cad5.png"},455:function(v,_,r){v.exports=r.p+"assets/img/spring02.24fc01f2.png"},500:function(v,_,r){"use strict";r.r(_);var t=r(19),p=Object(t.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),t("p",[v._v("Spring : 春天 ---\x3e给软件行业带来了春天")]),v._v(" "),t("p",[v._v("2002年，Rod Jahnson首次推出了Spring框架雏形interface21框架。")]),v._v(" "),t("p",[v._v("2004年3月24日，Spring框架以interface21框架为基础，经过重新设计，发布了1.0正式版。")]),v._v(" "),t("p",[v._v("Spring理念 : 使现有技术更加实用 . 本身就是一个大杂烩 , 整合现有的框架技术")]),v._v(" "),t("blockquote",[t("p",[v._v("官网 : http://spring.io/")]),v._v(" "),t("p",[v._v("官方下载地址 : https://repo.spring.io/libs-release-local/org/springframework/spring/")]),v._v(" "),t("p",[v._v("GitHub : https://github.com/spring-projects")]),v._v(" "),t("p",[v._v("参考资料，狂神说")])]),v._v(" "),t("h2",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[v._v("#")]),v._v(" 优点")]),v._v(" "),t("p",[v._v("1、Spring是一个"),t("code",[v._v("开源免费的框架")]),v._v(" , "),t("code",[v._v("容器")]),v._v("  .")]),v._v(" "),t("p",[v._v("2、Spring是一个"),t("code",[v._v("轻量级")]),v._v("的框架 , 非侵入式的 .")]),v._v(" "),t("p",[v._v("3、控制反转 "),t("code",[v._v("IoC")]),v._v("  , 面向切面 "),t("code",[v._v("Aop")])]),v._v(" "),t("p",[v._v("4、对"),t("code",[v._v("事物")]),v._v("的支持 , 对"),t("code",[v._v("框架")]),v._v("的支持")]),v._v(" "),t("blockquote",[t("p",[t("strong",[v._v("总结: Spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器（框架）")])])]),v._v(" "),t("h2",{attrs:{id:"组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[v._v("#")]),v._v(" 组成")]),v._v(" "),t("p",[t("img",{attrs:{src:r(454),alt:""}})]),v._v(" "),t("p",[v._v("Spring 框架是一个分层架构，由 7 个定义良好的模块组成")]),v._v(" "),t("p",[v._v("Spring 模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean 的方式")]),v._v(" "),t("p",[t("img",{attrs:{src:r(455),alt:""}})]),v._v(" "),t("p",[v._v("组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下")]),v._v(" "),t("h3",{attrs:{id:"核心容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心容器"}},[v._v("#")]),v._v(" 核心容器")]),v._v(" "),t("p",[v._v("核心容器提供 Spring 框架的"),t("code",[v._v("基本功能")]),v._v("。核心容器的主要组件是 "),t("code",[v._v("BeanFactory")]),v._v("，它是"),t("code",[v._v("工厂模式")]),v._v("的实现。BeanFactory 使用"),t("code",[v._v("控制反转（IOC）")]),v._v(" 模式将应用程序的"),t("code",[v._v("配置")]),v._v("和"),t("code",[v._v("依赖性规范")]),v._v("与"),t("code",[v._v("实际的应用")]),v._v("程序代码"),t("code",[v._v("分开")]),v._v("。")]),v._v(" "),t("h3",{attrs:{id:"spring-上下文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-上下文"}},[v._v("#")]),v._v(" Spring 上下文")]),v._v(" "),t("p",[v._v("Spring 上下文是一个"),t("code",[v._v("配置文件")]),v._v("，向 Spring 框架提供上下文信息。Spring 上下文包括企业服务，例如 JNDI、EJB、电子邮件、国际化、校验和调度功能。")]),v._v(" "),t("h3",{attrs:{id:"spring-aop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop"}},[v._v("#")]),v._v(" Spring AOP")]),v._v(" "),t("p",[v._v("通过配置管理特性，Spring AOP 模块直接将"),t("code",[v._v("面向切面")]),v._v("的编程功能 , 集成到了 Spring 框架中。所以，可以很容易地使 Spring 框架管理任何支持 AOP的对象。Spring AOP 模块为基于 Spring 的应用程序中的对象提供了"),t("code",[v._v("事务管理服务")]),v._v("。通过使用 Spring AOP，"),t("code",[v._v("不用依赖组件")]),v._v("，就可以将声明性事务管理集成到应用程序中。")]),v._v(" "),t("h3",{attrs:{id:"spring-dao"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-dao"}},[v._v("#")]),v._v(" Spring DAO")]),v._v(" "),t("p",[v._v("JDBC DAO 抽象层提供了有意义的异常层次结构，可用该结构来"),t("code",[v._v("管理异常处理")]),v._v("和"),t("code",[v._v("不同数据库")]),v._v("供应商抛出的错误消息。异常层次结构"),t("code",[v._v("简化了错误处理")]),v._v("，并且极大地降低了需要编写的异常代码数量（例如打开和关闭连接）。Spring DAO 的面向 JDBC 的异常遵从通用的 DAO 异常层次结构。")]),v._v(" "),t("h3",{attrs:{id:"spring-orm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-orm"}},[v._v("#")]),v._v(" Spring ORM：")]),v._v(" "),t("p",[v._v("Spring 框架插入了若干个 "),t("code",[v._v("ORM 框架")]),v._v("，从而提供了 ORM 的"),t("code",[v._v("对象关系工具")]),v._v("，其中包括 "),t("code",[v._v("JDO")]),v._v("、"),t("code",[v._v("Hibernate")]),v._v(" 和 "),t("code",[v._v("iBatis SQL Map")]),v._v("。所有这些都遵从 Spring 的"),t("code",[v._v("通用事务")]),v._v("和 "),t("code",[v._v("DAO 异常层次结构。")])]),v._v(" "),t("h3",{attrs:{id:"spring-web-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-web-模块"}},[v._v("#")]),v._v(" Spring Web 模块")]),v._v(" "),t("p",[v._v("Web 上下文模块"),t("code",[v._v("建立在应用程序上下文模块之上")]),v._v("，为基于 Web 的应用程序提供了上下文。所以，Spring 框架支持与 Jakarta Struts 的集成。Web 模块还"),t("code",[v._v("简化了处理多部分请求")]),v._v("以及"),t("code",[v._v("将请求参数绑定到域对象")]),v._v("的工作。")]),v._v(" "),t("h3",{attrs:{id:"spring-mvc-框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc-框架"}},[v._v("#")]),v._v(" Spring MVC 框架")]),v._v(" "),t("p",[v._v("MVC 框架是一个"),t("code",[v._v("全功能的构建 Web 应用程序")]),v._v("的 "),t("code",[v._v("MVC 实现")]),v._v("。通过策略接口，MVC 框架变成为"),t("code",[v._v("高度可配置")]),v._v("的，MVC 容纳了大量"),t("code",[v._v("视图技术")]),v._v("，其中包括 JSP、Velocity、Tiles、iText 和 POI。")]),v._v(" "),t("h2",{attrs:{id:"拓展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[v._v("#")]),v._v(" 拓展")]),v._v(" "),t("p",[v._v("Spring Boot与Spring Cloud")]),v._v(" "),t("p",[v._v("Spring Boot 是 Spring 的一套快速配置脚手架，可以基于Spring Boot 快速开发单个微服务;")]),v._v(" "),t("p",[v._v("Spring Cloud是基于Spring Boot实现的；")]),v._v(" "),t("p",[v._v("Spring Boot专注于快速、方便集成的单个微服务个体，Spring Cloud关注全局的服务治理框架；")]),v._v(" "),t("p",[v._v("Spring Boot使用了约束优于配置的理念，很多集成方案已经帮你选择好了，能不配置就不配置 , Spring Cloud很大的一部分是基于Spring Boot来实现，Spring Boot可以离开Spring Cloud独立使用开发项目，但是Spring Cloud离不开Spring Boot，属于依赖的关系。")]),v._v(" "),t("p",[v._v("SpringBoot在SpringClound中起到了承上启下的作用，学习SpringCloud必须要学习SpringBoot。")])])}),[],!1,null,null,null);_.default=p.exports}}]);