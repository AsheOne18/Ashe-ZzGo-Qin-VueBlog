(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{465:function(a,e,v){a.exports=v.p+"assets/img/maven20.13e2cbda.png"},466:function(a,e,v){a.exports=v.p+"assets/img/maven30.30dfb240.png"},522:function(a,e,v){"use strict";v.r(e);var t=v(14),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"依赖的传递性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖的传递性"}},[a._v("#")]),a._v(" 依赖的传递性")]),a._v(" "),t("p",[t("img",{attrs:{src:v(465),alt:""}})]),a._v(" "),t("p",[a._v("WebMavenDemo项目依赖"),t("code",[a._v("JavaMavenService1")])]),a._v(" "),t("p",[t("code",[a._v("JavaMavenService1")]),a._v("项目依赖"),t("code",[a._v("JavaMavenService2")])]),a._v(" "),t("p",[a._v("pom.xml文件配置好依赖关系后，必须首先mvn install后，依赖的jar包才能使用。")]),a._v(" "),t("p",[a._v("WebMavenDemo的pom.xml文件想能编译通过，"),t("code",[a._v("JavaMavenService1")]),a._v("必须"),t("code",[a._v("mvn install")])]),a._v(" "),t("p",[t("code",[a._v("JavaMavenService1")]),a._v("的"),t("code",[a._v("pom.xml")]),a._v("文件想能编译通过，"),t("code",[a._v("JavaMavenService2")]),a._v("必须"),t("code",[a._v("mvn install")])]),a._v(" "),t("h2",{attrs:{id:"传递性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传递性"}},[a._v("#")]),a._v(" 传递性")]),a._v(" "),t("p",[t("img",{attrs:{src:v(466),alt:""}})]),a._v(" "),t("p",[a._v("在Eclipse / IntelliJ IDEA中，为JavaMavenService2中增加了一个spring-core.jar包后，会惊喜的发现依赖的两个项目都自动的增加了这个jar包，这就是依赖的传递性")]),a._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("非compile范围的依赖是不能传递的\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);