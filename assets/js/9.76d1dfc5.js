(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{467:function(e,t,v){e.exports=v.p+"assets/img/maven40.18c8ed6e.png"},468:function(e,t,v){e.exports=v.p+"assets/img/maven50.eae035ce.png"},524:function(e,t,v){"use strict";v.r(t);var a=v(14),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"依赖版本的原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖版本的原则"}},[e._v("#")]),e._v(" 依赖版本的原则")]),e._v(" "),a("p",[e._v("依赖版本的原则有两种")]),e._v(" "),a("ul",[a("li",[e._v("路径最短者优先原则")]),e._v(" "),a("li",[e._v("路径相同先声明优先原则")])]),e._v(" "),a("h3",{attrs:{id:"路径最短者优先原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径最短者优先原则"}},[e._v("#")]),e._v(" 路径最短者优先原则")]),e._v(" "),a("p",[a("img",{attrs:{src:v(467),alt:""}})]),e._v(" "),a("p",[a("code",[e._v("Service2")]),e._v("的log4j的版本是"),a("code",[e._v("1.2.7")]),e._v("版本，"),a("code",[e._v("Service1")]),e._v("排除了此包的依赖，自己加了一个Log4j的"),a("code",[e._v("1.2.9")]),e._v("的版本")]),e._v(" "),a("p",[e._v("那么"),a("code",[e._v("WebMavenDemo")]),e._v("项目遵守路径最短优先原则，Log4j的版本和Sercive1的版本一致。")]),e._v(" "),a("h3",{attrs:{id:"路径相同先声明优先原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径相同先声明优先原则"}},[e._v("#")]),e._v(" 路径相同先声明优先原则")]),e._v(" "),a("p",[a("img",{attrs:{src:v(468),alt:""}})]),e._v(" "),a("p",[e._v("这种场景依赖关系发生了变化，"),a("code",[e._v("WebMavenDemo项目依赖Sercive1和Service2")])]),e._v(" "),a("p",[e._v("它俩是同一个路径，那么谁在"),a("code",[e._v("WebMavenDemo的pom.xml")]),e._v("中先声明的依赖就用谁的版本。")])])}),[],!1,null,null,null);t.default=s.exports}}]);